name: Deploy Website

on:
  push:
    branches:
      - dev_front
  workflow_dispatch: # Allows manual triggering of the workflow

permissions:
  id-token: write # for requesting the JWT
  contents: read # for actions/checkout

jobs:
  deploy:
    name: Build, Deploy to S3 bucket
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create .env file
        run: |
          echo REACT_APP_HOST=${{ secrets.REACT_APP_HOST }} >> .env
          echo REACT_APP_KAKAO_KEY=${{ secrets.REACT_APP_KAKAO_KEY }} >> .env
        working-directory: ./Client

      - name: Install dependencies
        run: npm install
        working-directory: ./Client

      - name: Build the project
        run: npm run build
        working-directory: ./Client
        env:
          CI: ""

      # Access Key와 Secret Access Key를 통해 권한을 확인
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }} # GitHub Secrets에 설정한 IAM 역할 ARN
          aws-region: ${{ secrets.AWS_REGION }} # GitHub Secrets에 설정한 AWS 리전

      # 빌드 파일을 S3에 업로드
      - name: Upload to S3
        run: aws s3 sync ./Client/build/ s3://${{ secrets.AWS_S3_BUCKET }} --delete

      # CloudFront 캐시 무효화
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
